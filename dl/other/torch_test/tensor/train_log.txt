len predicts: 4
len targets[labels][0]: 4
predicts[0]: tensor([[[[-4.1484]],

         [[-5.0664]],

         [[-2.8848]],

         [[ 3.1016]],

         [[-4.3516]]],


        [[[-4.0117]],

         [[-4.8906]],

         [[-3.4414]],

         [[-3.6660]],

         [[ 3.9316]]],


        [[[-3.7285]],

         [[-4.0430]],

         [[-3.2148]],

         [[-3.6406]],

         [[ 3.2168]]],


        [[[-4.3164]],

         [[-4.1797]],

         [[-3.2832]],

         [[-3.3008]],

         [[ 3.9043]]],


        [[[-5.6211]],

         [[-5.8047]],

         [[-3.7070]],

         [[ 3.2441]],

         [[-5.2891]]],


        [[[-5.7930]],

         [[-5.8633]],

         [[-3.0215]],

         [[ 3.4824]],

         [[-4.2891]]],


        [[[-6.1406]],

         [[-6.5469]],

         [[-2.9980]],

         [[ 3.5391]],

         [[-5.6797]]],


        [[[-4.5977]],

         [[ 3.1875]],

         [[-2.7852]],

         [[-3.2715]],

         [[-4.3125]]]], device='cuda:0', dtype=torch.float16)
targets[labels][0]: tensor([[0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0.],
        [0., 1., 0., 0., 0.]], device='cuda:0')
predict_weather: tensor([[-4.1484, -5.0664, -2.8848,  3.1016, -4.3516],
        [-4.0117, -4.8906, -3.4414, -3.6660,  3.9316],
        [-3.7285, -4.0430, -3.2148, -3.6406,  3.2168],
        [-4.3164, -4.1797, -3.2832, -3.3008,  3.9043],
        [-5.6211, -5.8047, -3.7070,  3.2441, -5.2891],
        [-5.7930, -5.8633, -3.0215,  3.4824, -4.2891],
        [-6.1406, -6.5469, -2.9980,  3.5391, -5.6797],
        [-4.5977,  3.1875, -2.7852, -3.2715, -4.3125]], device='cuda:0',
       dtype=torch.float16)
predict_weather[..., 0]: tensor([-4.1484, -4.0117, -3.7285, -4.3164, -5.6211, -5.7930, -6.1406, -4.5977],
       device='cuda:0', dtype=torch.float16)
targets_weather[..., 0]: tensor([0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
predict_positive: tensor([], device='cuda:0', size=(0, 1), dtype=torch.float16)
predict_negative: tensor([[-4.1484],
        [-4.0117],
        [-3.7285],
        [-4.3164],
        [-5.6211],
        [-5.7930],
        [-6.1406],
        [-4.5977]], device='cuda:0', dtype=torch.float16)
targets_positive: tensor([], device='cuda:0', size=(0, 1))
targets_negative: tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], device='cuda:0')
predict_stack: tensor([[-4.1484],
        [-4.0117],
        [-3.7285],
        [-4.3164],
        [-5.6211],
        [-5.7930],
        [-6.1406],
        [-4.5977]], device='cuda:0', dtype=torch.float16)
targets_stack: tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], device='cuda:0')
pred_sigmoid: tensor([[0.0155],
        [0.0178],
        [0.0235],
        [0.0132],
        [0.0036],
        [0.0030],
        [0.0021],
        [0.0100]], device='cuda:0', dtype=torch.float16)
target: tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], device='cuda:0', dtype=torch.float16)
pt: tensor([[0.0155],
        [0.0178],
        [0.0235],
        [0.0132],
        [0.0036],
        [0.0030],
        [0.0021],
        [0.0100]], device='cuda:0', dtype=torch.float16)
focal_weight: tensor([[1.8114e-04],
        [2.3700e-04],
        [4.1306e-04],
        [1.3005e-04],
        [9.7567e-06],
        [6.9326e-06],
        [3.4655e-06],
        [7.4575e-05]], device='cuda:0')
loss: tensor([[2.8377e-06],
        [4.2519e-06],
        [9.8078e-06],
        [1.7244e-06],
        [3.5262e-08],
        [2.1105e-08],
        [7.4555e-09],
        [7.4762e-07]], device='cuda:0')
predict_weather[..., 1]: tensor([-5.0664, -4.8906, -4.0430, -4.1797, -5.8047, -5.8633, -6.5469,  3.1875],
       device='cuda:0', dtype=torch.float16)
targets_weather[..., 1]: tensor([0., 0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
predict_positive: tensor([[3.1875]], device='cuda:0', dtype=torch.float16)
predict_negative: tensor([[-5.0664],
        [-4.8906],
        [-4.0430],
        [-4.1797],
        [-5.8047],
        [-5.8633],
        [-6.5469]], device='cuda:0', dtype=torch.float16)
targets_positive: tensor([[1.]], device='cuda:0')
targets_negative: tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], device='cuda:0')
predict_stack: tensor([[ 3.1875],
        [-5.0664],
        [-4.8906],
        [-4.0430],
        [-4.1797],
        [-5.8047],
        [-5.8633],
        [-6.5469]], device='cuda:0', dtype=torch.float16)
targets_stack: tensor([[1.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], device='cuda:0')
pred_sigmoid: tensor([[0.9604],
        [0.0063],
        [0.0075],
        [0.0172],
        [0.0151],
        [0.0030],
        [0.0028],
        [0.0014]], device='cuda:0', dtype=torch.float16)
target: tensor([[1.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], device='cuda:0', dtype=torch.float16)
pt: tensor([[0.0396],
        [0.0063],
        [0.0075],
        [0.0172],
        [0.0151],
        [0.0030],
        [0.0028],
        [0.0014]], device='cuda:0', dtype=torch.float16)
focal_weight: tensor([[3.9107e-04],
        [2.9426e-05],
        [4.1756e-05],
        [2.2298e-04],
        [1.7046e-04],
        [6.7683e-06],
        [6.0250e-06],
        [1.5389e-06]], device='cuda:0')
loss: tensor([[1.5817e-05],
        [1.8495e-07],
        [3.1270e-07],
        [3.8783e-06],
        [2.5888e-06],
        [2.0365e-08],
        [1.7099e-08],
        [2.2060e-09]], device='cuda:0')
predict_weather[..., 2]: tensor([-2.8848, -3.4414, -3.2148, -3.2832, -3.7070, -3.0215, -2.9980, -2.7852],
       device='cuda:0', dtype=torch.float16)
targets_weather[..., 2]: tensor([0., 0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
predict_positive: tensor([], device='cuda:0', size=(0, 1), dtype=torch.float16)
predict_negative: tensor([[-2.8848],
        [-3.4414],
        [-3.2148],
        [-3.2832],
        [-3.7070],
        [-3.0215],
        [-2.9980],
        [-2.7852]], device='cuda:0', dtype=torch.float16)
targets_positive: tensor([], device='cuda:0', size=(0, 1))
targets_negative: tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], device='cuda:0')
predict_stack: tensor([[-2.8848],
        [-3.4414],
        [-3.2148],
        [-3.2832],
        [-3.7070],
        [-3.0215],
        [-2.9980],
        [-2.7852]], device='cuda:0', dtype=torch.float16)
targets_stack: tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], device='cuda:0')
pred_sigmoid: tensor([[0.0529],
        [0.0310],
        [0.0386],
        [0.0362],
        [0.0240],
        [0.0465],
        [0.0475],
        [0.0581]], device='cuda:0', dtype=torch.float16)
target: tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], device='cuda:0', dtype=torch.float16)
pt: tensor([[0.0529],
        [0.0310],
        [0.0386],
        [0.0362],
        [0.0240],
        [0.0465],
        [0.0475],
        [0.0581]], device='cuda:0', dtype=torch.float16)
focal_weight: tensor([[3.1121e-07],
        [2.1545e-08],
        [6.4308e-08],
        [4.6388e-08],
        [5.9178e-09],
        [1.6267e-07],
        [1.8166e-07],
        [4.9807e-07]], device='cuda:0')
loss: tensor([[1.6918e-08],
        [6.7905e-10],
        [2.5322e-09],
        [1.7081e-09],
        [1.4353e-10],
        [7.7397e-09],
        [8.8431e-09],
        [2.9829e-08]], device='cuda:0')
predict_weather[..., 3]: tensor([ 3.1016, -3.6660, -3.6406, -3.3008,  3.2441,  3.4824,  3.5391, -3.2715],
       device='cuda:0', dtype=torch.float16)
targets_weather[..., 3]: tensor([1., 0., 0., 0., 1., 1., 1., 0.], device='cuda:0')
predict_positive: tensor([[3.1016],
        [3.2441],
        [3.4824],
        [3.5391]], device='cuda:0', dtype=torch.float16)
predict_negative: tensor([[-3.6660],
        [-3.6406],
        [-3.3008],
        [-3.2715]], device='cuda:0', dtype=torch.float16)
targets_positive: tensor([[1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
targets_negative: tensor([[0.],
        [0.],
        [0.],
        [0.]], device='cuda:0')
predict_stack: tensor([[ 3.1016],
        [ 3.2441],
        [ 3.4824],
        [ 3.5391],
        [-3.6660],
        [-3.6406],
        [-3.3008],
        [-3.2715]], device='cuda:0', dtype=torch.float16)
targets_stack: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [0.],
        [0.],
        [0.],
        [0.]], device='cuda:0')
pred_sigmoid: tensor([[0.9570],
        [0.9624],
        [0.9702],
        [0.9717],
        [0.0249],
        [0.0256],
        [0.0356],
        [0.0366]], device='cuda:0', dtype=torch.float16)
target: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [0.],
        [0.],
        [0.],
        [0.]], device='cuda:0', dtype=torch.float16)
pt: tensor([[0.0430],
        [0.0376],
        [0.0298],
        [0.0283],
        [0.0249],
        [0.0256],
        [0.0356],
        [0.0366]], device='cuda:0', dtype=torch.float16)
focal_weight: tensor([[3.6619e-08],
        [1.8782e-08],
        [5.8606e-09],
        [4.5544e-09],
        [7.2264e-09],
        [8.1797e-09],
        [4.2603e-08],
        [4.8989e-08]], device='cuda:0')
loss: tensor([[1.6111e-09],
        [7.1862e-10],
        [1.7740e-10],
        [1.3038e-10],
        [1.8251e-10],
        [2.1183e-10],
        [1.5419e-09],
        [1.8247e-09]], device='cuda:0')
predict_weather[..., 4]: tensor([-4.3516,  3.9316,  3.2168,  3.9043, -5.2891, -4.2891, -5.6797, -4.3125],
       device='cuda:0', dtype=torch.float16)
targets_weather[..., 4]: tensor([0., 1., 1., 1., 0., 0., 0., 0.], device='cuda:0')
predict_positive: tensor([[3.9316],
        [3.2168],
        [3.9043]], device='cuda:0', dtype=torch.float16)
predict_negative: tensor([[-4.3516],
        [-5.2891],
        [-4.2891],
        [-5.6797],
        [-4.3125]], device='cuda:0', dtype=torch.float16)
targets_positive: tensor([[1.],
        [1.],
        [1.]], device='cuda:0')
targets_negative: tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.]], device='cuda:0')
predict_stack: tensor([[ 3.9316],
        [ 3.2168],
        [ 3.9043],
        [-4.3516],
        [-5.2891],
        [-4.2891],
        [-5.6797],
        [-4.3125]], device='cuda:0', dtype=torch.float16)
targets_stack: tensor([[1.],
        [1.],
        [1.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], device='cuda:0')
pred_sigmoid: tensor([[0.9810],
        [0.9614],
        [0.9805],
        [0.0127],
        [0.0050],
        [0.0135],
        [0.0034],
        [0.0132]], device='cuda:0', dtype=torch.float16)
target: tensor([[1.],
        [1.],
        [1.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], device='cuda:0', dtype=torch.float16)
pt: tensor([[0.0190],
        [0.0386],
        [0.0195],
        [0.0127],
        [0.0050],
        [0.0135],
        [0.0034],
        [0.0132]], device='cuda:0', dtype=torch.float16)
focal_weight: tensor([[9.0659e-05],
        [3.7199e-04],
        [9.5367e-05],
        [1.2146e-04],
        [1.8901e-05],
        [1.3739e-04],
        [8.6838e-06],
        [1.3111e-04]], device='cuda:0')
loss: tensor([[1.7607e-06],
        [1.4620e-05],
        [1.9030e-06],
        [1.5552e-06],
        [9.5146e-08],
        [1.8718e-06],
        [2.9602e-08],
        [1.7452e-06]], device='cuda:0')
